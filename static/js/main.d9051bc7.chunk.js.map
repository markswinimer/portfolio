{"version":3,"sources":["Title.js","ContentSection.js","ContentDivider.js","SimpleContentSection.js","Footer.js","Home.js","Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Title","className","Component","ContentSection","this","props","header","subheader","content","color","src","ContentDivider","startPositionColor","SimpleContentSection","Footer","href","Home","Navbar","App","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4RAoBeA,E,iLAhBX,OACE,yBAAKC,UAAU,mBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,6CACA,8CAEF,yBAAKA,UAAU,eAAf,mH,GATUC,aCwBLC,E,iLAvBH,IAAD,EACgCC,KAAKC,MAApCC,EADD,EACCA,OAAQC,EADT,EACSA,UAAWC,EADpB,EACoBA,QAC3B,OACE,yBAAKP,UAAS,mCAA8BG,KAAKC,MAAMI,QACrD,yBAAKR,UAAU,kBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,wBACb,yBAAKS,IAAI,0GAEX,oCACA,yCACA,oCAEF,yBAAKT,UAAU,wBACb,4BAAKK,GACL,4BAAKC,GACL,2BAAIC,U,GAjBaN,aCYdS,E,iLAXH,IAEAC,EAAuBR,KAAKC,MAA5BO,mBACR,OACE,yBAAKX,UAAU,kBACb,yBAAKA,UAAS,6BAAwBW,KACtC,yBAAKX,UAAS,gCAA2BW,U,GAPpBV,aCqBdW,E,iLAnBH,IAAD,EACqBT,KAAKC,MAAzBC,EADD,EACCA,OAAQE,EADT,EACSA,QAChB,OACE,yBAAKP,UAAU,kCACb,yBAAKA,UAAU,wBACb,4BAAKK,GACL,2BAAIE,GACJ,yBAAKP,UAAU,qC,GARUC,aCiBpBY,E,iLAhBX,OACE,yBAAKb,UAAU,oBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,gBAEb,uBAAGc,KAAK,2BAA0B,uBAAGd,UAAU,mBAC/C,uBAAGc,KAAK,gCAA+B,uBAAGd,UAAU,sBAEtD,yBAAKA,UAAU,kBACb,kF,GAXSC,aC4CNc,E,iLArCX,OACE,yBAAKf,UAAU,QACb,yBAAKA,UAAU,kBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAgBW,mBAAmB,UACnC,kBAAC,EAAD,CACEH,MAAM,OACNH,OAAO,WACPC,UAAU,2BACVC,QAAQ,0OAEV,kBAAC,EAAD,CAAgBI,mBAAmB,SACnC,kBAAC,EAAD,CACEH,MAAM,QACNH,OAAO,WACPC,UAAU,sBACVC,QAAQ,0OAEV,kBAAC,EAAD,CAAgBI,mBAAmB,UACnC,kBAAC,EAAD,CACEH,MAAM,OACNH,OAAO,WACPC,UAAU,sBACVC,QAAQ,0OAEV,kBAAC,EAAD,CAAgBI,mBAAmB,SACnC,kBAAC,EAAD,CACEN,OAAO,cACPE,QAAQ,0OAEV,kBAAC,EAAD,Y,GAhCSN,aCcJe,E,iLAjBX,OACE,yBAAKhB,UAAU,UACf,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,2BACb,yBAAKS,IAAI,mLAEX,yBAAKT,UAAU,yBACb,uBAAGc,KAAK,KAAR,QACA,uBAAGA,KAAK,6CAAR,YACA,uBAAGA,KAAK,mCAAR,iB,GAXWb,aCqBNgB,G,uLAfX,OACE,kBAAC,IAAD,CAAYC,SAAS,KACrB,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAYN,U,GANxBd,cCMEqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCVNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.d9051bc7.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    return(\n      <div className=\"Title-container\">\n        <div className=\"Title\">\n          <div className=\"Title-name\">\n            <h1>Mark Swinimer</h1>\n            <h2>web developer</h2>\n          </div>\n          <div className=\"Title-about\">\n            I'm a Web Developer located in Boston MA. My passion is writing clean, creative and functional solutions.\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Title;\n","import React, { Component } from 'react';\n\nclass ContentSection extends Component {\n  render() {\n    const { header, subheader, content } = this.props;\n    return(\n      <div className={`ContentSection-container ${this.props.color}`}>\n        <div className=\"ContentSection\">\n          <div className=\"ContentSection-left\">\n            <div className=\"ContentSection-image\">\n              <img src=\"https://assets.pcmag.com/media/images/521567-how-to-build-a-website.jpg?thumb=y&width=810&height=456\" />\n            </div>\n            <p>react</p>\n            <p>javascript</p>\n            <p>ruby</p>\n          </div>\n          <div className=\"ContentSection-right\">\n            <h1>{header}</h1>\n            <h2>{subheader}</h2>\n            <p>{content}</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default ContentSection;\n","import React, { Component } from 'react';\n\nclass ContentDivider extends Component {\n  render() {\n\n    const { startPositionColor } = this.props;\n    return(\n      <div className=\"ContentDivider\">\n        <div className={`ContentDivider-top-${startPositionColor}`}></div>\n        <div className={`ContentDivider-bottom-${startPositionColor}`}></div>\n      </div>\n    )\n  }\n}\nexport default ContentDivider;\n","import React, { Component } from 'react';\n\n\nclass SimpleContentSection extends Component {\n  render() {\n    const { header, content } = this.props\n    return(\n      <div className=\"SimpleContentSection-container\">\n        <div className=\"SimpleContentSection\">\n          <h1>{header}</h1>\n          <p>{content}</p>\n          <div className=\"SimpleContentSection-links\">\n{/* \n            <p><i className=\"fas fa-envelope-square\" /> markswinimer@gmail.com</p>\n            <p><i className=\"fab fa-github\" /> github.com/markswinimer</p>\n            <p><i className=\"fab fa-linkedin\" /> linkedin.com/in/markswinimer</p> */}\n\n        </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default SimpleContentSection;\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n    return(\n      <div className=\"Footer-container\">\n        <div className=\"Footer\">\n          <div className=\"Footer-icons\">\n            {/* <i className=\"fas fa-envelope-square\" /> */}\n            <a href=\"github.com/markswinimer\"><i className=\"fab fa-github\" /></a>\n            <a href=\"linkedin.com/in/markswinimer\"><i className=\"fab fa-linkedin\" /></a>\n          </div>\n          <div className=\"Footer-contact\">\n            <p>2019 Mark Swinimer | markswinimer@gmail.com </p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default Footer;\n","import React, { Component } from 'react';\nimport Title from './Title';\nimport ContentSection from './ContentSection';\nimport ContentDivider from './ContentDivider';\nimport SimpleContentSection from './SimpleContentSection';\nimport Footer from './Footer';\n\nclass Home extends Component {\n  render() {\n    return(\n      <div className=\"Home\">\n        <div className=\"Home-container\">\n          <Title/>\n          <ContentDivider startPositionColor=\"white\"/>\n          <ContentSection\n            color=\"navy\"\n            header=\"About me\"\n            subheader=\"Process and Technologies\"\n            content=\"Filler content is being input here so that I can type and not worry about making sense and still fill out a section of content for test readers to read and by test readers I mean myself because no one will be reading this at all!\"\n          />\n          <ContentDivider startPositionColor=\"navy\"/>\n          <ContentSection\n            color=\"white\"\n            header=\"Projects\"\n            subheader=\"What I'm working on\"\n            content=\"Filler content is being input here so that I can type and not worry about making sense and still fill out a section of content for test readers to read and by test readers I mean myself because no one will be reading this at all!\"\n          />\n          <ContentDivider startPositionColor=\"white\"/>\n          <ContentSection\n            color=\"navy\"\n            header=\"Projects\"\n            subheader=\"What I'm working on\"\n            content=\"Filler content is being input here so that I can type and not worry about making sense and still fill out a section of content for test readers to read and by test readers I mean myself because no one will be reading this at all!\"\n          />\n          <ContentDivider startPositionColor=\"navy\"/>\n          <SimpleContentSection\n            header=\"Contact me!\"\n            content=\"I'd love to share some of my work with you. Feel free to reach out via email or see my work at one of these links. I'd love to share some of my work with you. Feel free to reach out via email or see my work at one of these links.\"\n          />\n          <Footer />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\n\nclass Navbar extends Component {\n  render() {\n    return(\n      <div className=\"Navbar\">\n      <div className=\"Navbar-container\">\n        <div className=\"Navbar-avatar-container\">\n          <img src=\"https://www.washingtonpost.com/resizer/g8YZs6VSwW8io7_i13wBggeYqnA=/767x0/smart/arc-anglerfish-washpost-prod-washpost.s3.amazonaws.com/public/BQRPP7J4D5FLDBA5EN4Q7YBIJA.jpeg\"/>\n        </div>\n        <div className=\"Navbar-link-container\">\n          <a href=\"/\">Home</a>\n          <a href=\"https://www.linkedin.com/in/markswinimer/\">Linkedin</a>\n          <a href=\"https://github.com/markswinimer\">Github</a>\n          {/* <a className=\"Navbar-link\">blog</a> */}\n        </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default Navbar;\n","import React, { Component } from 'react';\nimport { HashRouter, Route, Link } from \"react-router-dom\";\nimport Home from \"./Home.js\";\nimport Navbar from './Navbar.js';\nimport './Main.scss';\n\nclass App extends Component {\n  render() {\n    return(\n      <HashRouter basename='/'>\n      <div>\n        <Navbar/>\n        <Route exact path=\"/\" component={ Home } />\n\n        {/* Features I plan to build out. */}\n        {/* <Route exact path=\"/projects\" component={Projects} /> */}\n        {/* <Route exact path=\"/blog\" component={Blog} /> */}\n      </div>\n    </HashRouter>\n  )\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}